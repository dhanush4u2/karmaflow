import jsPDF from 'jspdf';
import autoTable from 'jspdf-autotable'; // 1. Use a direct import
import { UserProfile } from '@/hooks/useUserWallet';
import { UserMetrics } from '@/hooks/useUserMetrics';
import { Transaction } from '@/hooks/useTransactions';

interface ReportData {
  profile: UserProfile | null;
  metrics: UserMetrics | null;
  transactions: Transaction[];
}

/**
 * Generates a comprehensive PDF report from the user's data.
 * This version uses a more reliable method for creating tables.
 */
export const generatePdfReport = (data: ReportData) => {
  const { profile, metrics, transactions } = data;
  const doc = new jsPDF();
  
  // --- Header ---
  doc.setFontSize(20);
  doc.text("CarbonFlow Emissions & Compliance Report", 14, 22);
  doc.setFontSize(11);
  doc.setTextColor(100);
  doc.text(`Industry: ${profile?.industry_name || 'N/A'}`, 14, 30);
  doc.text(`Report Generated: ${new Date().toLocaleDateString()}`, 14, 36);

  // --- Summary Section ---
  autoTable(doc, { // 2. Call autoTable as a function, passing the doc instance
    startY: 45,
    head: [['Metric', 'Value']],
    body: [
      ['Total GHG Emissions', `${(metrics?.total_ghg_emissions ?? 0).toLocaleString()} tCO₂e`],
      ['Available Carbon Credits', `${(metrics?.available_credits ?? 0).toLocaleString()}`],
      ['Last Month Emissions', `${(metrics?.last_month_ghg_emissions ?? 0).toLocaleString()} tCO₂e`],
      ['Wallet Balance', `₹${(profile?.wallet_balance ?? 0).toLocaleString()}`],
    ],
    theme: 'striped',
    headStyles: { fillColor: '#10b981' }, // Using a clean hex color for green
  });

  // --- Recent Transactions Table ---
  const lastY = (doc as any).lastAutoTable.finalY || 100; // Get position after the first table
  doc.setFontSize(16);
  doc.text("Recent Transaction History", 14, lastY + 15);
  autoTable(doc, {
    startY: lastY + 20,
    head: [['Date', 'Type', 'Counterparty', 'Credits', 'Amount (INR)']],
    body: transactions.slice(0, 10).map(tx => {
      const isBuy = tx.buyer_id === profile?.id;
      return [
        new Date(tx.created_at).toLocaleDateString(),
        isBuy ? 'Buy' : 'Sell',
        (isBuy ? tx.seller_industry_name : tx.buyer_industry_name) || 'N/A',
        (tx.credits ?? 0).toLocaleString(),
        `₹${(tx.amount ?? 0).toLocaleString()}`
      ];
    }),
    theme: 'grid',
    headStyles: { fillColor: '#10b981' },
  });
  
  // --- Footer ---
  const pageCount = (doc as any).internal.getNumberOfPages();
  for (let i = 1; i <= pageCount; i++) {
    doc.setPage(i);
    doc.setFontSize(10);
    doc.setTextColor(150);
    doc.text(`Page ${i} of ${pageCount}`, doc.internal.pageSize.width - 25, doc.internal.pageSize.height - 10);
    doc.text("Confidential - Generated by CarbonFlow", 14, doc.internal.pageSize.height - 10);
  }

  // --- Save the PDF ---
  doc.save(`CarbonReport_${profile?.industry_name || 'Report'}_${new Date().toISOString().split('T')[0]}.pdf`);
};
